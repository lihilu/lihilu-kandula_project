pipeline {
    agent {label "jenkins1"}
        environment {
            register = "lihilure/kandula_image_app"
            dockerimage = ""
            upload_image= ""
            AWS_DEFAULT_REGION="us-east-1"
        }
    stages {
        stage('slack massage') {
            steps{
            sh 'echo this is slack massage'
            }
        }
        stage("git clone") {
            steps{
                script {
                    end = "failure"
                    git branch: 'main', credentialsId: 'Lihi.opsschool.jenkins', url: 'https://github.com/lihilu/kandule_app_lihi.git'
                    end = "success"
                }
            }
        }
        stage("create docker build") {
            steps{
                script {
                    end = "failure"
                    dockerimage = docker.build register + ":first" 
                     end = "success"
                }
            }    
        }
        stage("docker push"){
            steps{
                script{
                    end = "failure"
                    withDockerRegistry([ credentialsId: "lihi dockerhub", url: "" ]) {
                    upload_image = register + ":first"
                    sh "docker image push ${upload_image}"
                    }
                    end = "success"
                }
            }    
        }
        stage("delete docker") {
           steps{
                script {
                    end = "failure"
                    sh " docker image prune -a --force"
                    end = "success"
                }
           }
        }
        stage("connect to kubernetes") {
           steps{
                script {
                    end = "failure"
                    sh 'aws eks --region=us-east-1 update-kubeconfig --name kandula-project-eks'
                    sh 'aws sts get-caller-identity'
                    end = "success"
                }
           }
        }
        stage("deploy app on kubernetes") {
           steps{
                script {
                    end = "failure"
                    withCredentials([usernamePassword(credentialsId: 'awsuserpass', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                        sh 'kubectl apply -f kandula_app.yaml'
                    }
                    end = "success"
                }
           }
        }
        
    }
}